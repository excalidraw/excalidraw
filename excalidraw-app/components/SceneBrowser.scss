.excalidraw {
  .SceneBrowser {
    max-height: 70vh;
    overflow-y: auto;
  }

  .InlineSceneBrowser {
    display: flex;
    flex-direction: column;
  }

  .SceneBrowser__heading {
    margin: 0 0 1rem 0;
    color: var(--color-on-surface);
    font-weight: 600;
  }

  .SceneBrowser__content {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .SceneBrowser__item {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    gap: 1rem;
    padding: 0.75rem 1rem;
    background: var(--color-surface-lowest);
    border: 1px solid var(--dialog-border-color);
    border-radius: var(--border-radius-lg);
  }

  .SceneBrowser__meta {
    flex: 1 1 auto;
    min-width: 0;
  }

  .SceneBrowser__name {
    margin: 0 0 0.25rem 0;
    color: var(--color-on-surface);
    font-size: 1rem;
    font-weight: 600;
  }

  .SceneBrowser__sub {
    font-size: 0.875rem;
    color: var(--color-muted-darker);
  }

  .SceneBrowser__version-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 0.25rem;
    
    label {
      font-size: 0.875rem;
      color: var(--color-on-surface);
      font-weight: 500;
      white-space: nowrap;
    }
    
    .dropdown-select {
      height: 1.75rem;
      padding: 0 0.5rem;
      color: var(--color-on-surface);
      background-color: var(--color-surface);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-md);
      font-size: 0.875rem;
      font-family: inherit;
      outline: none;
      appearance: none;
      background-image: var(--dropdown-icon);
      background-repeat: no-repeat;
      background-position: right 0.5rem top 50%, 0 0;
      background-size: 0.65em auto, 100%;
      min-width: 200px;
      
      &:focus {
        box-shadow: 0 0 0 2px var(--focus-highlight-color);
        border-color: var(--color-primary);
      }
      
      &:hover {
        background-color: var(--color-surface-hover);
        border-color: var(--color-border-hover);
      }
      
      option {
        background-color: var(--color-surface);
        color: var(--color-on-surface);
        padding: 0.25rem 0.5rem;
      }
    }
  }

  .SceneBrowser__actions {
    display: inline-flex;
    gap: 0.5rem;
    flex: 0 0 auto;
  }

  // Enhanced button styling for better appearance
  .SceneBrowser__actions .ToolButton,
  .SceneBrowser__actions button[class*="ToolButton"] {
    // Base button styling
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius-md);
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    font-weight: 500;
    transition: all 0.2s ease;
    min-height: 2rem;
    display: inline-flex;
    align-items: center;
    gap: 0.375rem;
    
    background: var(--color-surface-secondary);
    color: var(--color-on-surface-secondary) !important;
    
    &:hover {
      background: var(--color-surface-secondary-hover);
      border-color: var(--color-border-hover);
      transform: translateY(-1px);
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    
    &:active {
      transform: translateY(0);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
    
    &:disabled {
      opacity: 0.6;
      cursor: not-allowed;
      transform: none;
      box-shadow: none;
    }
    
    // Icon styling
    .ToolIcon {
      --icon-fill-color: currentColor;
      width: 1rem;
      height: 1rem;
    }
    
    // Override any CSS custom properties that might affect text color
    --button-color: var(--color-on-surface) !important;
    --text-color: var(--color-on-surface) !important;
    
    // Override any default button text colors
    color: var(--color-on-surface-secondary) !important;
    
    // Target all possible text elements with maximum specificity
    span, div, button, & > *, & > span, & > div {
      color: inherit !important;
    }
    
    // Target text nodes and any other content
    * {
      color: inherit !important;
    }
    
    // Force text color on all child elements
    & * {
      color: inherit !important;
    }
    
    // Target specific button content
    &[title*="Load"] * {
      color: var(--color-on-primary) !important;
    }
    
    &[title*="Copy"] * {
      color: var(--color-on-surface-secondary) !important;
    }
    
    &[title*="Delete"] * {
      color: var(--color-on-danger) !important;
    }
  }

  // Specific button variants
  .SceneBrowser__actions .ToolButton[title*="Load"],
  .SceneBrowser__actions button[title*="Load"] {
    background: var(--color-surface-secondary);
    color: var(--color-on-surface-secondary) !important;
    border-color: var(--color-primary);
    
    &:hover {
      background: var(--color-surface-secondary-hover);
      border-color: var(--color-border-hover);
    }
    
    span, div, button, & > * {
      color: var(--color-on-primary) !important;
    }
    
    // Force all text content to be the right color
    * {
      color: var(--color-on-primary) !important;
    }
  }
  
  .SceneBrowser__actions .ToolButton[title*="Copy"],
  .SceneBrowser__actions button[title*="Copy"] {
    background: var(--color-surface-secondary);
    color: var(--color-on-surface-secondary) !important;
    border-color: var(--color-border);
    
    &:hover {
      background: var(--color-surface-secondary-hover);
      border-color: var(--color-border-hover);
    }
    
    span, div, button, & > * {
      color: var(--color-on-surface-secondary) !important;
    }
    
    // Force all text content to be the right color
    * {
      color: var(--color-on-surface-secondary) !important;
    }
  }
  
  .SceneBrowser__actions .ToolButton[title*="Delete"],
  .SceneBrowser__actions button[title*="Delete"] {
    background: var(--color-surface-secondary);
    color: var(--color-on-surface-secondary) !important;
    border-color: var(--color-danger);
    
    &:hover {
      background: var(--color-surface-secondary-hover);
      border-color: var(--color-border-hover);
    }
    
    &:disabled {
      background: var(--color-danger-muted);
      color: var(--color-on-danger-muted) !important;
      border-color: var(--color-danger-muted);
      
      span, div, button, & > * {
        color: var(--color-on-danger-muted) !important;
      }
      
      * {
        color: var(--color-on-danger-muted) !important;
      }
    }
    
    span, div, button, & > * {
      color: var(--color-on-danger) !important;
    }
    
    // Force all text content to be the right color
    * {
      color: var(--color-on-danger) !important;
    }
  }

  // Dark mode specific adjustments
  .excalidraw--theme-dark & {
    .SceneBrowser__actions .ToolButton {
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
      
      &:hover {
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.4);
      }
      
      &:active {
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
      }
    }
  }
}


